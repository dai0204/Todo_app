%h1
  = @auth.name
  's Task List
- if @task.errors.any?
  .card.red.lighten-3
    .card-content.white-text
      %span.card-title.red-text.text-darken-3
        %b
          = @task.errors.count
          個の項目に入力不備がありました。
      %ul
        - @task.errors.full_messages.each do |msg|
          %li= msg
%ul.collapsible
  %li
    .collapsible-header
      %i.material-icons> add
      Create New Task
    .collapsible-body
      = form_for(@task) do |f|
        .input-field.col.s6
          = f.text_field :task, :required => true
          = f.label :task
        .input-field.col.s6
          = f.select(:state, [['todo', 'todo'], ['doing', 'doing'], ['done', 'done']])
          = f.label :state
        .input-field.col.s6
          = f.text_field :free_comment
          = f.label :free_comment
        .input-field.col.s6
          = f.text_field :limit_date, class: "datepicker", :required => true
          = f.label :limit_date
        = f.submit "Create New task", class: "btn"
- if !@auth.tasks.nil?
  %table
    %thead
      %tr
        %th{:width => "100px"} State
        %th{:width => "100px"} Limit
        %th Task
        %th{:width => "50px"}
        %th{:width => "50px"}
        %th{:width => "50px"}
    %tbody
      - @auth.tasks.each do |t|
        %tr{:id => "task-#{t.id}"}
          %td
            - if    t.state == 'todo'
              %p.btn.btn-small.btn-block= t.state
            - elsif t.state == 'doing'
              %p.btn.btn-small.btn-block.amber= t.state
            - elsif t.state == 'done'
              %p.btn.btn-small.disabled.btn-block.grey= t.state
            - else
              %p.btn.btn-small.disabled.btn-block= t.state
          %td
            - today = Date.today
            - diff  = t.limit_date - today
            - if    diff.to_i <= 0
              %b.red-text.text-lighten-2= t.limit_date
            - elsif diff.to_i <= 3
              %b.amber-text= t.limit_date
            - else
              %b= t.limit_date
          %td
            = t.task
            - if t.free_comment.length > 0
              %a.waves-effect.waves-light.btn.btn-small.btn-floating.blue.modal-trigger{:href => "#comment-#{t.id}"}
                %i.material-icons search
          %td
            - if t.state != 'done'
              = form_for(t, url: "/tasks/#{t.id}", html: { method: 'PUT' }) do |f|
                %input{:name => "task[state]", :type => "hidden", :value => "done"}/
                %button.btn.green.btn-floating.btn-small{:type => "submit"}
                  %i.material-icons check
          %td
            = link_to("/tasks/#{t.id}", class: "btn btn-floating btn-small") do
              %i.material-icons edit
          %td
            = link_to("/tasks/#{t.id}", class: "btn red btn-floating btn-small", method: "DELETE") do
              %i.material-icons delete